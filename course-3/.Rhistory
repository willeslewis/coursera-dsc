str(tapply)
?str
swirl()
library("swirl")
swirl()
sapply(flags,unique)
vapply(flags,unique,numeric(1))
ok()
sapply(flags,class)
vapply(flags,class,character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate,flags$landmass,mean)
tapply(flags$population,flags$red,summary)
tapply(flags$population,flags$landmass,summary)
library(datasets)
data(iris)
?iris
lapply(iris$Sepal.Length,mean,na.rm=TRUE)
?apply
apply(iris,2,mean,na.rm=TRUE)
apply(iris,2,mean)
iris
apply(iris[,1:4],2,mean)
colMeans(iris)
colMeans(iris[,1:4])
mea<-colMeans(iris[,1:4])
class(mea)
amea<-apply(iris[,1:4],2,mean)
amea
class(amea)
library(datasets)
data(mtcars)
?mtcars
tapply(mtcars$mpg,mtcars$cyl,mean,na.rm=TRUE)
?mean
sapply(split(mtcars$mpg,mtcars$cyl),mean)
sapply(mtcars,cyl,mean)
hp<-tapply(mtcars$hp,mtcars$cyl,mean,na.rm=TRUE)
hp
abs(hp[3]-hp[1])
debug(ls)
ls()
tapplyn
nn
getwd()
setwd("/Users/William/Desktop/Desktop/Projects/coursera-dsc/course-3")
install.packages("xlsx")
install.packages("rJava")
library(xlsx)
?read.xlsx
dat<-read.xlsx("natural-gas-aquisition.xlsx",rowIndex = 18:23,colIndex = 7:15)
dat<-read.xlsx("natural-gas-aquisition.xlsx",rowIndex = 18:23,colIndex = 7:15,sheetIndex = 1)
sum(dat$Zip*dat$Ext,na.rm=T)
library(XML)
fileURL<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
?xmlRoot
?xmlTreeParse
?xmlRoot
doc<-xmlTreeParse(fileURL,useInternalNodes = TRUE)
library(RCurl)
fileURL<-getURL("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml")
doc<-xmlTreeParse(fileURL,useInternalNodes = TRUE)
?xmlRoot
?xlmSApply
?xpathSApply
zips<-xpathSApply(doc,"//zipcode")
zips
zips<-xpathSApply(doc,"//zipcode",simplify=TRUE)
zips
names(doc)
str(doc)
?getNodeSet
getNodeSet("zipcode")
getNodeSet(doc,"//zipcode")
getNodeSet(doc,"zipcode")
zips<-xpathSApply(doc,"zipcode",simplify=TRUE)
zips
zips<-xpathSApply(doc,"//zipcode",simplify=TRUE)
zips
str(zips)
?xpath
?xpathSApply
?xmlValue
xmlValue(zips)
?xmlRoot
rootNode<-xmlRoot(doc)
rootNode
xmlValue(rootNode)
zips<-xpathSApply(rootNode,"//zipcode",simplify=TRUE)
zips
rootNode[zips]
rootNode["zips"]
rootNode["//zips"]
rootNode[1]
xmlValue(rootNode)
xmlValue(rootNode[1])
rootNode[1]
rootNode[2]
xmlValue(rootNode[1])
xmlValue(rootNode)
?xmlValue
names(rootNode)
names(doc)
xmlName(rootNode)
names(rootNode)
fileURL<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc<-xmlTreeParse(fileURL,useInternal=TRUE)
fileURL<-getURL("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml")
doc<-xmlTreeParse(fileURL,useInternal=TRUE)
rootNode<-xmlRoot(doc)
xmlName(rootNode)
names(rootNode)
zips<-xpathSApply(rootNode,"//zipcode",xmlValue)
zips
zips<-as.integer(zips)
zips
zips==21231
ziplog<-zips==21231
sum(ziplog)
fileURL<"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
fileURL<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
download.file(fileURL,destfile = "idaho-housing.csv")
data<-fread("idaho-housing.csv")
library(data.table)
data<-fread("idaho-housing.csv")
DT<-fread("idaho-housing.csv")
DT$pwgtp15
names(DT)
sapply(split(DT$pwgtp15,DT$SEX),mean)
split(DT$pwgtp15,DT$SEX)
spDT<-split(DT$pwgtp15,DT$SEX)
names(spDT)
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
install.packages("RMySQL")
library(RMySQL)
ucscDb<-dbConnect(MySQL(),user="genome",host="genome-mysql.cse.ucsc.edu")
result<-dbGetQuery(ucscDb,"show databases;"); dbDisconnect(ucscDb);
result
hg19<-dbConnect(MySQL(),user="genome",db="hg19",host="genome-mysql.cse.ucsc.edu")
allTables<-db
allTables<-dbListTables(hg19)
length(allTables)
allTables[1:5]
dbListFields(hg19,"affyU133Plus2")
hg19<-dbConnect(MySQL(),user="genome",db="hg19",host="genome-mysql.cse.ucsc.edu")
dbListFields(hg19,"affyU133Plus2")
dbGetQuery(hg19,"select count(*) from affyU133Plus2")
affyData<-dbReadTable(hg19,"affyU133Plus2")
head(affyData)
query<-dbSendQuery(hg19,"select * from affyU133Plus2 where misMatches between 1 and 3")
affyMis<-fetch(query); quantile(affyMis$misMatches)
affyMisSmall<-fetch(query,n=10); dbClearResult(query);
dim(affyMisSmall)
dbDisconnect(hg19)
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
library(rhdf5)
created=h5createFile("example.h5")
created
getwd()
created=h5createGroup("example.h5","foo")
created=h5createGroup("example.h5","baa")
created=h5createGroup("example.h5","foo/foobaa")
h5ls("example.h5")
A=matrix(1:10,nr=5,nx=2)
A=matrix(1:10,nr=5,nc=2)
h5write(A,"example.h5","foo/A")
B=array(seq(0.1,2.0,by=0.1),dim=c(5,2,2))
attr(B,"scale")<-"liter"
h5write(B,"example.h5","foo/foobaa/B")
h5ls("example.h5")
df=data.frame(1L:5L,seq(0,1,length.out=5),c("ab","cde","fghi","a","s"),stringsAsFactors = FALSE)
h5write(df,"ecample.h5","df")
h5write(df,"example.h5","df")
h5ls("example.h5")
readA=h5read("example.h5","foo/A")
readB=h5read("example.h5","foo/foobaa/B")
readdf=h5read("example.h5","df")
readA
h5write(c(12,13,14),"example.h5","foo/A",index=list(1:3,1))
h5read("example.h5","foo/A")
h5read("example.h5","foo/A",index=list(1:3,1:2))
con=url("http://scholar.google.com/citations?user=HI-I6C0AAAAJ&hl=en")
htmlCode=readLines(con)
close(con)
htmlCode
library(XML)
url<-"http://scholar.google.com/citations?user=HI-I6C0AAAAJ&hl=en"
html<-htmlTreeParse(url,useInternalNodes = T)
xpathSApply(html,"//title",xmlValue)
xpathSApply(html,"//td[@id='col-citedby']",xmlValue)
names(html)
rootNode(html)
xpathSApply(html,"//td[@id='col-citedby']",htmlValue)
html<-htmlTreeParse(url,useInternalNodes = T)
xpathSApply(html,"//title",xmlValue)
xpathSApply(html,"//a[@id='col-citedby']",htmlValue)
html
xpathSApply(html,"//title",xmlValue)
xpathSApply(html,"//td",xmlValue)
xpathSApply(html,"//td cited-by",xmlValue)
html
xpathSApply(html,"//td[id=cited-by]",xmlValue)
xpathSApply(html,"//td[@id=cited-by]",xmlValue)
xpathSApply(html,"//td["id=cited-by""]",xmlValue)
xpathSApply(html,"//td["id=cited-by"]",xmlValue)
xpathSApply(html,"//td[@"id=cited-by"]",xmlValue)
xpathSApply(html,"//td[@id="col-citedby"]",xmlValue)
xpathSApply(html,"//td[@id=col-citedby]",xmlValue)
xpathSApply(html,"//td[@id='col-citedby']",xmlValue)
xpathSApply(html,".//td[@id='col-citedby']",xmlValue)
html[1]
html
xpathSApply(html,".//div",xmlValue)
xpathSApply(html,"/div",xmlValue)
xpathSApply(html,"//div",xmlValue)
html
xpathSApply(html,"//div[@id="gsc_a_err" class="gs_alrt" style="display:none"]",xmlValue)
xpathSApply(html,"//div[id="gsc_a_err" class="gs_alrt" style="display:none"]",xmlValue)
xpathSApply(html,"//div id="gsc_a_err" class="gs_alrt" style="display:none"",xmlValue)
xpathSApply(html,"//div id='gsc_a_err' class='gs_alrt' style='display:none'",xmlValue)
xpathSApply(html,"//div/id='gsc_a_err' class='gs_alrt' style='display:none'",xmlValue)
xpathSApply(html,"//div/id='gsc_a_err'",xmlValue)
xpathSApply(html,"//div/id='gsc_a_err'/class='gs_alrt'/style='display:none'",xmlValue)
xpathSApply(html,"//div/@id='gsc_a_err'/",xmlValue)
xpathSApply(html,"//div/@id='gsc_a_err'",xmlValue)
xpathSApply(html,"//td/@id='col-citedby'",xmlValue)
html
xpathSApply(html,"//td/@class='col-citedby'",xmlValue)
xpathSApply(html,"//td/@class="gsc_a_y"",xmlValue)
xpathSApply(html,"//td/@class='gsc_a_y'",xmlValue)
xpathSApply(html,"//td[@class='gsc_a_y']",xmlValue)
xpathSApply(html,"//td[@id='col-citedby']",xmlValue)
html
url<-"http://scholar.google.com/citations?user=HI-I6C0AAAAJ&hl=en"
html<-htmlTreeParse(url,useInternalNodes = T)
xpathSApply(html,"//td[@id='col-citedby']",xmlValue)
xpathSApply(html,"//td[@class='gsc_a_y']",xmlValue)
html
install.packages(httr)
install.packages("httr")
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("RepoInfo",
key = "f63714324dc106089c1d",
secret = "edfc2e09fc733a653911efe8537e81f60dee8cd6")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
a
myapp <- oauth_app("RepoInfo",
key = "f63714324dc106089c1d",
secret = "edfc2e09fc733a653911efe8537e81f60dee8cd6")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
