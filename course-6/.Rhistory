str(tapply)
?str
swirl()
library("swirl")
swirl()
sapply(flags,unique)
vapply(flags,unique,numeric(1))
ok()
sapply(flags,class)
vapply(flags,class,character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate,flags$landmass,mean)
tapply(flags$population,flags$red,summary)
tapply(flags$population,flags$landmass,summary)
library(datasets)
data(iris)
?iris
lapply(iris$Sepal.Length,mean,na.rm=TRUE)
?apply
apply(iris,2,mean,na.rm=TRUE)
apply(iris,2,mean)
iris
apply(iris[,1:4],2,mean)
colMeans(iris)
colMeans(iris[,1:4])
mea<-colMeans(iris[,1:4])
class(mea)
amea<-apply(iris[,1:4],2,mean)
amea
class(amea)
library(datasets)
data(mtcars)
?mtcars
tapply(mtcars$mpg,mtcars$cyl,mean,na.rm=TRUE)
?mean
sapply(split(mtcars$mpg,mtcars$cyl),mean)
sapply(mtcars,cyl,mean)
hp<-tapply(mtcars$hp,mtcars$cyl,mean,na.rm=TRUE)
hp
abs(hp[3]-hp[1])
debug(ls)
ls()
tapplyn
nn
swirl()
getwd()
library(swirl)
swirl()
dice_sqr
ex2_fairsum(dice_sqr*dice_fair)
ex2_fair<-sum(dice_sqr*dice_fair)
ex2_fair-3.5
ex2_fair-3.5^2
sum(dice_sqr*dice_high)-edh^2
sd(apply(matrix(rnorm(10000),1000),1,mean))
1/sqrt(10)
1/sqrt(120)
sd(apply(matrix(runif(10000),1000),1,mean))
2/sqrt(10)
sd(apply(matrix(rpois(10000,4),1000),1,mean))
1/(2*sqrt(10))
sd(apply(matrix(sample(0:1,10000,TRUE),1000),1,mean))
choose(5,3)*0.8^3*0.2^(5-3)
choose(5,3)*0.8^3*0.2^(5-3)+choose(5,4)*0.8^4*0.2^(5-4)+choose(5,5)*0.8^5*0.2^(5-5)
pbinom(quantile=2,size=5,prob=0.8,lower.tail = FALSE)
?pbinom
pbinom(2,size=5,prob=0.8,lower.tail = FALSE)
play()
qbinom(0.8, size=5, prob=0.8, lower.tail = FALSE)
qbinom(1, size=5, prob=0.8, lower.tail = FALSE)
qbinom(0.5, size=5, prob=0.8, lower.tail = FALSE)
qbinom(0.0.9, size=5, prob=0.8, lower.tail = FALSE)
qbinom(0.09, size=5, prob=0.8, lower.tail = FALSE)
qbinom(0.94208, size=5, prob=0.8, lower.tail = FALSE)
qbinom(0.94209, size=5, prob=0.8, lower.tail = FALSE)
nxt()
qnorm(prob=0.1)
qnorm(0.1)
0
qnorm(0.975,mean=3,sd=2)
1.96*2+3
pnorm(1200,mean=1020,sd=50,lower.tail = FALSE)
pnorm((1200-1020)/50,lower.tail = FALSE)
qnorm(0.75,mean=1020,sd=50)
0.53
0.53
ppois(3,mean=2.5*4)
ppois(3,2.5*4)
pbinom(5,1000,0.01)
ppois(5,1000*0.1)
ppois(5,1000*0.01)
coinPlot(n=10)
coinPlot(n=10000)
qnorm(0.95)
0.6+c(-1,1)*qnorm(.975)*sqrt(0.6*(1-0.6)/100)
x$conf.int
binom.text(60,100)$conf.int
binom.test(60,100)$conf.int
mywald(0.2)
ACCompar(20)
lamb<-5/94.32
lamb+c(-1,1)*qnorm(0.975)*sqrt(lamb/94.32)
poisson.text(5,94.32)$conf
poisson.test(5,94.32)$conf
qnorm(70,mean=80,sd=10)
pnorm(70,mean=80,sd=10)
qnorm(0.95,mean=1100,sd=75)
1100+2*sqrt(75/100)
1100+2*sqrt(75^2/100)
pbinom(4,5,0.5)
pbinom(4,5,0.5,tail.lower=FALSE)
10/sqrt(100)
ppois(10,5*3)
1100+sqrt(75^2/100)
1100+2*sqrt(75^2/100)
1100+2*sqrt(1/100)
pnorm(0.95,mean=1100,sd=75/sqrt(100))
qnorm(0.95,mean=1100,sd=75/sqrt(100))
?pbinom
pbinom(4,5,0.5,lower.tail=FALSE)
pbinom(3,5,0.5,lower.tail=FALSE)
?qt
swirl()
myplot(2)
myplot(20)
myplot2(2)
qt(0.975,2)
myplot2(20)
sleep
range(g1)
range(g2)
g2-g1
difference<-g2-g1
mean(difference)
s<-sd(difference)
mn+c(-1,1)*qt(0.975,9)*s/sqrt(10)
t.test(difference)$conf.int
sp<-(7*s_{oc}**2+20*s_{c}**2)
sp<-(7*15.43**2+20*18.23**2)
sp<-(7*15.43^2+20*18.23^2)
sp<-(7*15.34^2+20*18.23^2)
ns<-8+21-2
sp<-sqrt(sp/ns)
132.86-127.44+c(-1,1)*qt(0.975,ns)*sp*sqrt(1/8+1/21)
sp<-sqrt((9*var(g1)+9*var(g2))/(10+10-2))
sp<-sqrt((9*var(g1)+9*var(g2))/18)
md+c(-1,1)*qt(0.975,18)*sp*sqrt(1/10+1/10)
t.test(g2-g1,paired=FALSE,var.equal = TRUE)$conf
t.test(g2,g1,paired=FALSE,var.equal = TRUE)$conf
t.test(g2,g1,paired=TRUE)$conf
num<-(15.34^2/8+18.23^2/21)^2
num<-((15.34^2/8)^2/7+(18.23^2/21)^2/20)
den <- 15.34^4/8^2/7 + 18.23^4/21^2/20
num<-(15.34^2/8+18.23^2/21)^2
mydf<-num/dem
mydf<-num/den
132.86-127.44+c(-1,1)*qt(0.975,mydf)*sqrt(15.34^2/8+18.23^2/21)
10/sqrt(100)
2
2/(1/sqrt(16))
(32-30)/(10/4)
15
qt(0.95,15)
dim(fs)
t.test(fs$sheight,fs$fheight,paired=TRUE)
11.7885*sd(fs$sheight-fs$fheight)/sqrt(1078)
mybin
9
8
pt(2.5,df=15,lower.tail = FALSE)
qnorm(0.95)
qnorm(0.99)
pnorm(2,lower.tail = TRUE)
pnorm(2,lower.tail = FALSE)
mybin
pbinom(6,prob=0.5,lower.tail = FALSE)
pbinom(6,size=8,prob=0.5,lower.tail = FALSE)
pbinom(6,size=8,prob=0.5,lower.tail = TRUE)
pbinom(7,size=8,prob=0.5,lower.tail = TRUE)
ppois(9,5,lower.tail = FALSE)
1100+c(-1,1)*qt(0.975,8)*30/sqrt(9)
pt(2,8)
?pt
qt(0.975,8)
qt(0.975,8)/sqrt(9)
2/(qt(0.975,8)/sqrt(9))
3-5+c(-1,1)*qt(0.975,10+10-2)*sqrt((9*0.6+9*0.68)/(10+10-2))*sqrt(1/10+1/10)
6-4+c(-1,1)*qt(0.975,100+100-2)*sqrt((9*0.5^2+9*2^2)/(100+100-2))*sqrt(1/100+1/100)
-3-1+c(-1,1)*qt(0.95,9+9-2)*sqrt((8*1.5^2+8*1.8^2)/(9+9-2))*sqrt(1/9+1/9)
base<-c(140,138,150,148,135)
new<-c(132,135,151,146,130)
t.test(new,base,paired=TRUE)
qt(c(0.025,0.975),df=8)
1100+c(-1,1)*qt(0.975)*30/sqrt(9)
1100+c(-1,1)*qt(0.975,df=8)*30/sqrt(9)
pbinom(2,size=4,prob=0.5,lower.tail = FALSE)
1/100*1787
?ppois
ppois(10,17.87)
?t.test
?power.t.test
power.t.test(n=100,delta=0.01,sd=0.04,sig.level=0.05,alternative="one.sided")
power.t.test(power=0.90,delta=0.01,sd=0.04,sig.level=0.05,alternative="one.sided")
275/2
power.t.test(power=0.90,delta=0.01,sd=0.04,sig.level=0.05,alternative="one.sided",type=paired)
power.t.test(power=0.90,delta=0.01,sd=0.04,sig.level=0.05,alternative="one.sided",type="paired")
power.t.test(n=100,delta=0.01,sd=0.04,sig.level=0.05,alternative="one.sided",type="paired")
?t.test
mdt<- -3
mdp<-1
st<-1.5
sp<-1.8
c(-1,1)*qt(c(0.025,0.975),16)*sqrt(8*st^2+8*sp^2)/(16)*sqrt(1/9+1/9)
?qt
qt(0.025,16)*sqrt(8*st^2+8*sp^2)/(16)*sqrt(1/9+1/9)
qt(0.975,16,lower.tail=FALSE)*sqrt(8*st^2+8*sp^2)/(16)*sqrt(1/9+1/9)
qt(0.975,16,lower.tail=FALSE)*sqrt(8*st^2+8*sp^2)/(16)*sqrt(1/9+1/9)
pt(0.975,16,lower.tail=FALSE)*sqrt(8*st^2+8*sp^2)/(16)*sqrt(1/9+1/9)
pt(0.025,16,lower.tail=TRUE)*sqrt(8*st^2+8*sp^2)/(16)*sqrt(1/9+1/9)
qt(0.975,16,lower.tail=FALSE)*sqrt(8*st^2+8*sp^2)/(16)*sqrt(1/9+1/9)
qt(0.975,16,lower.tail=FALSE)
qt(0.975,df=16,lower.tail=FALSE)
qt(p=0.975,df=16,lower.tail=FALSE)
qt(97.5),df=16,lower.tail=FALSE)
qt(97.5,df=16,lower.tail=FALSE)
qt(1,df=16,lower.tail=FALSE)
qt(-1,df=16,lower.tail=FALSE)
qt(0,df=16,lower.tail=FALSE)
qt(0.5,df=16,lower.tail=FALSE)
qt(0.975,df=16)
qt(0.975,df=16)*sqrt(8*st^2+8*sp^2)/(16)*sqrt(1/9+1/9)
se<-qt(0.975,df=16)*sqrt(8*st^2+8*sp^2)/(16)*sqrt(1/9+1/9)
(mdt-mdp)/se
pt(-9.66359)
pt(-9.66359,df=16)
swirl()
myplot(34)
myplot(33.3)
myplot(30)
myplot(28)
z<-qnorm(0.95)
pnorm(30+z,lower.tail = FALSE)
pnorm(30+z,mean=30,lower.tail = FALSE)
pnorm(30+z,mean=32,lower.tail = FALSE)
pnorm(30+z,mean=32,sd=1,lower.tail = FALSE)
pnorm(30+z*2,mean=32,sd=2,lower.tail = FALSE)
power.t.test(n=16,delta=2/4,sd=1,type="one.sample",alt="one.sided")$power
power.t.test(n=16,delta=2,sd=4,type="one.sample",alt="one.sided")$power
power.t.test(n=16,delta=100,sd=200,type="one.sample",alt="one.sided")$power
power.t.test(power=0.8,delta=2/4,sd=1,type="one.sample",alt="one.sided")$power
power.t.test(power=0.8,delta=2/4,sd=1,type="one.sample",alt="one.sided")$n
power.t.test(power=0.8,delta=2,sd=4,type="one.sample",alt="one.sided")$n
power.t.test(power=0.8,delta=100,sd=200,type="one.sample",alt="one.sided")$n
power.t.test(power=0.8,n=26,sd=1,type="one.sample",alt="one.sided")$n
power.t.test(power=0.8,n=26,sd=1,type="one.sample",alt="one.sided")$delta
power.t.test(power=0.8,n=27,sd=1,type="one.sample",alt="one.sided")$delta
head(pValues)
sum(pValues<0.5)
sum(pValues<0.05)
sum(p.adjust(pValues,method="bonferroni")<0.05)
sum(p.adjust(pValues,method="BH")<0.05)
tail(trueStatus)
table(pValues2<0.05,trueStatus)
24/1000
24/500
table(p.adjust(pValues2,method="bonferroni")<0.05,trueStatus)
table(p.adjust(pValues2,method="BH")<0.05,trueStatus)
1/6+2/6+3/6+4/6+5/6+6/6
print(g2)
head(sh)
head(nh)
nh
median(resampledMedians)
median(sh)
sam<-sample(fh,nh*B,replace = TRUE)
resam<-matrix(sam,B,nh)
meds<-apply(resam,1,median)
median(fh)-median(meds)
sd(meds)
sd(resampledMedians)
quantile(resampledMedians,c(0.025,0.975))
quantile(meds,c(0.025,0.975))
dim(InsectSprays)
names(InsectSprays)
range(Bdata$count)
range(Cdata$count)
BCcounts
group
testStat
obs<-testStat(BCcounts,group)
obs
mean(Bdata$count-Cdata$count)
sample(group)
perms <- sapply(1 : 10000, function(i) testStat(BCcounts, sample(group)))
mean(perms>obs)
testStat(DEcounts,group)
perms <- sapply(1 :
| 10000, function(i) testStat(DEcounts, sample(group)))
perms <- sapply(1:10000, function(i) testStat(DEcounts, sample(group)))
?rexp()
?sample
?seed
?set.seed
>matrix
?matrix
?rexp
?abline
abs
abs(-1)
?var
swirl()
fit<-lm(child~parent,galton)
sqrt(sum(fit$residuals^2)/(n-2))
summary(fit)$sigma
sqrt(deviance(fit)/(n-2))
mu<-mean(galton$child,galton$parent)
mu<-mean(galton$child)
sTot<-sum((galton$child-mu)^2)
sRes<-deviance(fit)
1-sRes/sTot
summary(fit)$r
summary(fit)$r.squared
cor(galton$child,galton$parent)
cor(galton$child,galton$parent)^2
ones<-rep(1,nrow(galton))
lm(child~ones+parent-1,galton)
lm(child~parent,galton)
lm(child~1,galton)
head(trees)
fit<-lm(Volume~Girth+Height+Constant-1,trees)
trees2<-eliminate("Girth",trees)
head(trees2)
fit2 <- lm(Volume ~ Height + Constant -1, trees2)
lapply(list(fit, fit2), coef)
all<-lm(Fertility~.,swiss)
summary(all)
lm(Fertility~Agricultre,swiss)
lm(Fertility~agricultre,swiss)
lm(Fertility~agriculture,swiss)
lm(Fertility~Agriculture,swiss)
summary(lm(Fertility ~ Agriculture, swiss))
with(swiss,cor(Examination,Education))
cor(swiss$Examination,swiss$Education)
cor(swiss$Agriculture,swiss$Education)
makelms()
ec<-swiss$Examination+swiss$Catholic
efit<-lm(Fertility~.+ec,swiss)
coef(fit)-coef(efit)
all$coefficients-efit$coefficients
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
fit(y~x)
lm(y~x)
fit<-lm(y~x)
summary(fit)
library(datasets)
headD(mtcars)
data(mtcars)
head(mtcars)
fit<-lm(mpg~wt,mtcars)
summary(fit)
?predict
predict(fit,mean(mtcars$wt))
predict(mean(mtcars$wt),fit)
predict(mean(mtcars$wt))
predict(fit)
summary(fit)
predict(fit,mean(mtcars$wt))
mtcars$wt
mean(mtcars$wt)
predict(fit,3.21725
)
summary(fit)
with(mtcars,predict(fit,mean(mtcars$wt)))
predict(fit,newdata=mean(mtcars$wt))
predict(fit)
predict.l,(fit,newdata=mean(mtcars$wt))
predict.lm(fit,newdata=mean(mtcars$wt))
fit<-lm(mtcars$mpg~mtcars$wt)
predict(fit,newdata=mean(mtcars$wt))
predict(fit,newdata=mean(mtcars$wt),interval = "confidence")
mean(mtcars$wt)
predict(fit,newdata=3.21725,interval = "confidence")
predict(fit,newdata=3.21725,interval = "prediction")
newx<-mean(mtcars$wt)
newx<-c(mean(mtcars$wt))
predict(fit,newdata=newx,interval = "prediction")
newx<-mean(mtcars$wt)
mean(mtcars$wt)
predict(fit,newdata=data.frame(wt=newx),interval = "prediction")
predict(fit,newdata=data.frame(wt=newx))
fit<-lm(mpg~wt,mtcars)
predict(fit,newdata=data.frame(wt=newx))
predict(fit,newdata=data.frame(wt=newx),interval="prediction")
predict(fit,newdata=data.frame(wt=newx),interval="confidence")
?mtcars
fit
predict(fit,newdata=data.frame(wt=3.0),interval="prediction")
fit<-lm(mpg~2*wt,mtcars)
mtcars$wtst<-2*mtcars$wt
fit<-lm(mpg~wtst,mtcars)
summary(fit)
fit
?lm
predict(fit,interval="confidence")
summary(fit)
qnorm(0.975)
1.959964*0.2796
-2.6722-1.959964*0.2796
fit$coefficients
-2.6722-2*1.959964*0.2796
2*-3.220206
fit
summary(fiut)
summary(fit)
mtcars$wtst<-1/2*mtcars$wt
fit<-lm(mpg~wtst,mtcars)
summary(fit)
-10.689-qnorm(0.975)*1.118
-10.689-qt(0.975,df=31)*1.118
fit$residuals
fitnoint<-lm(mpg~wt-1,mtcars)
fit<-lmo(mpg~wt,mtcars)
fit<-lm(mpg~wt,mtcars)
fitnoslope<-lm(mpg~1,mtcars)
summary(fitnoslope)
sum(fit$residuals^2)
sum(fit$residuals^2)/sum(fitnoslope$residuals^2)
?curve
?hist
?hist
?col
knitr::opts_chunk$set(echo = TRUE,results='asis')
knitr::opts_chunk$set(echo = TRUE,results='asis')
knitr::opts_chunk$set(echo = TRUE,results='asis')
#Set seed for reproducibility
set.seed(10)
lambda<-0.2
samplen<-40
numsamp<-1000
samp<-matrix(data=rexp(samplen*numsamp,rate=lambda),numsamp,samplen)
knitr::opts_chunk$set(echo = TRUE,results='asis')
#Set seed for reproducibility
set.seed(10)
lambda<-0.2
samplen<-40
numsamp<-1000
samp<-matrix(data=rexp(samplen*numsamp,rate=lambda),numsamp,samplen)
?rexp
?dchisq
getwd()
setwd("/Users/William/Desktop/Desktop/Projects/coursera-dsc/course-6")
library(datasets)
data("ToothGrowth")
mydat<-data("ToothGrowth")
head(mydat)
mydat<-data(ToothGrowth)
head(mydat)
?load
?data
data("ToothGrowth")
summary(data("ToothGrowth"))
ToothGrowth
head(ToothGrowth)
?ToothGrowth
data("mtcars")
mtcars
library(ggplot2)
names(ToothGrowth)
head(ToothGrowth)
summary(ToothGr)
summary(ToothGrowth)
str(ToothGrowth)
unique(ToothGrowth$dose)
as.factor(ToothGrowth$dose)
